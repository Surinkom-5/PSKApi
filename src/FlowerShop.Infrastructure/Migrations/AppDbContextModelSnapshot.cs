// <auto-generated />
using System;
using FlowerShop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlowerShop.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("BouquetCart", b =>
                {
                    b.Property<int>("BouquetsBouquetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartsCartId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BouquetsBouquetId", "CartsCartId");

                    b.HasIndex("CartsCartId");

                    b.ToTable("BouquetCart");
                });

            modelBuilder.Entity("CartFlower", b =>
                {
                    b.Property<int>("CartsCartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlowersFlowerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartsCartId", "FlowersFlowerId");

                    b.HasIndex("FlowersFlowerId");

                    b.ToTable("CartFlower");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Bouquet", b =>
                {
                    b.Property<int>("BouquetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("BouquetId");

                    b.ToTable("Bouquets");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CartId1")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId");

                    b.HasIndex("CartId1");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Flower", b =>
                {
                    b.Property<int>("FlowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Flowername")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("FlowersInStorage")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("FlowerId");

                    b.ToTable("Flowers");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.FlowersBouquet", b =>
                {
                    b.Property<int>("BouquetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlowerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlowerCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("BouquetId", "FlowerId");

                    b.HasIndex("FlowerId");

                    b.ToTable("FlowersBouquets");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BouquetCart", b =>
                {
                    b.HasOne("FlowerShop.Core.Entities.Bouquet", null)
                        .WithMany()
                        .HasForeignKey("BouquetsBouquetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerShop.Core.Entities.Cart", null)
                        .WithMany()
                        .HasForeignKey("CartsCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CartFlower", b =>
                {
                    b.HasOne("FlowerShop.Core.Entities.Cart", null)
                        .WithMany()
                        .HasForeignKey("CartsCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerShop.Core.Entities.Flower", null)
                        .WithMany()
                        .HasForeignKey("FlowersFlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Cart", b =>
                {
                    b.HasOne("FlowerShop.Core.Entities.Cart", null)
                        .WithMany("Carts")
                        .HasForeignKey("CartId1");

                    b.HasOne("FlowerShop.Core.Entities.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.FlowersBouquet", b =>
                {
                    b.HasOne("FlowerShop.Core.Entities.Bouquet", "Bouquet")
                        .WithMany("FlowersBouquet")
                        .HasForeignKey("BouquetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FlowerShop.Core.Entities.Flower", "Flower")
                        .WithMany("FlowersBouquet")
                        .HasForeignKey("FlowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bouquet");

                    b.Navigation("Flower");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Bouquet", b =>
                {
                    b.Navigation("FlowersBouquet");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Cart", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.Flower", b =>
                {
                    b.Navigation("FlowersBouquet");
                });

            modelBuilder.Entity("FlowerShop.Core.Entities.User", b =>
                {
                    b.Navigation("Carts");
                });
#pragma warning restore 612, 618
        }
    }
}
